# ==============================================================
# = Data Source
# ==============================================================
# spring.datasource.url = jdbc:mysql://localhost:3306/login?useSSL=true
# spring.datasource.url= jdbc:postgresql://192.168.99.1:5432/prismadb 
spring.datasource.url= jdbc:postgresql://${POSTGRES_IP}:5432/prismadb 
# spring.datasource.url= jdbc:postgresql://${POSTGRES_IP}:5432/prismadb 
spring.datasource.username=postgres
# spring.datasource.password=

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
# spring.jpa.hibernate.ddl-auto = update
# spring.jpa.hibernate.ddl-auto=create-drop

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from tb_user where email=?
spring.queries.roles-query=select u.email, r.role from tb_user u inner join user_role ur on(u.user_id=ur.user_id) inner join tb_role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
# spring.datasource.initialization-mode=always

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.application.name=user-service
# spring.data.mongodb.uri=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb/${MONGO_DATABASE}
# spring.data.mongodb.uri=mongodb://mongodb/microservice
spring.data.mongodb.host=${POSTGRES_IP}
# spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
# spring.data.mongodb.authentication-database=${MONGO_DATABASE}
# spring.data.mongodb.username=[username]
# spring.data.mongodb.password=[password]
spring.data.mongodb.database=microservices
# spring.data.mongodb.database=${MONGO_DATABASE}

# spring.data.mongodb.host=localhost
# spring.data.mongodb.port=27017
# spring.data.mongodb.database=microservices

logging.level.com.prisma.entity.user.model=DEBUG

spring.microservices.emailaccount.host=localhost
spring.microservices.emailaccount.port=8080
